using System.Threading.Tasks;
using OpenVASP.CSharpClient.Internals.Messages;
using OpenVASP.CSharpClient.Internals.Services;
using Xunit;

namespace OpenVASP.Tests
{
    public class WhisperFormatterTest
    {
        [Theory]
        [InlineData(MessageType.SessionRequest, "dc922b7f1af77b96ecfa525c3d0b1388d054b152fc02c70b80e664d0eb75d63f061df20d467cd66f847db353795f3f205255480cea5c5c0a45e38522c9b4d8d3a8757eef6d718cefe7665f23c012c056e747c5fc4fc8f7af769c0fce93feb2108cfdc10d3c3141d7f8c7f7b54ef4f6ba4c8e3c77ecb6365c14e21efec92b07c7bc2a670aab3a571d68c07e080553f2ad1e615b474760ed325b24dfb66271ef4ef852ad8468ed5dd04f387a2a9f56fdd19ae524fb3adaa3f088e11375abdb8b4c6e6c0d3af725eb4fc59942a8fe73898d6b28802768d51a70aac51b486d280537674cfb114fe20d9c63419a3111533ca6fca047d947dfbfc4614e3827be641977e687e65176435d2373224b22348466f69c504c51a68b302414e05f8c7baab79365fffe479db26468768d8129ccbd04c25a260c62c8841f76add081f24ddf8920d24a5c9bdd5c82af8e0d0d9b89d9be51c4d98591143644a525f3cad50895fbf6f68f43e101b31cea906f", "d24f6660feb7796c80d13ade91a7dfd374bda3f0007aa5ab4b9e93f7ad989abb", "0259d614774a057f68e62b85d46c921286cab02a0dc43de89a72c13e9c86d467c7")]
        [InlineData(MessageType.TransferRequest, "d542b9a5433319edc8a4e6ca8995567c6e10121b225ce7f7965bebbdc13e3450a1db9e4717f6f51abdb55017409bc6cf71676f19bd2f5bfbca68ded2e677bd9840a5a18fca31e6d979e8b3c0b51be9260d8a131edad688c26c7b397c74c2131ad7a414107133dad96e3b0104f98190d5c5daa3ae2bcaf7f2d6761c3cd1819bc5cc600aaf0a0d65210b1040eeaf0ef8eb00b428a3771ab5834176ed1fff0272430af75804928f05287868b70cfbd23e315d3b309f87cd0c8ee6ef926b1504e590cc69b9f84819790d3e59a8c1649c31f6832de9f1dd42d7328b42e16f557f94d11698423a0628ac961dbd7bfe256f8cd947164de9bc1010bc195e6243be08c5229234e197dbcf1c9c434d49f80e8a5b8f538253e4be71b9d88b942e854e70e0e6d94084cb5b27605858ea54640a7c55b980d9c449f16fc466a9d5d61e0b614f0c343d43360c7a24626d7603cd9c79a01a512a394f058687d6e448ddeb2d139c64e267eadeb8a317c265289776548ba783ac3e9aad60a3818e180f727f3dc92ce1d08fe95b3b80c359e9c885dadd08a099687d8bc77710e9db460760ffdfb7dc9209e2185221d872539a436b0c75fabaae9e34aee625204bd321079b2c77caf2d0123f94ef15252090519b01a49b70a0ee3443af6211eaffeac1e4c90f927f65a3ff8748e892445b7b289fc2be1f20d5cdae8e1b7dce2739aa5d8e4ae859aa64c4b980c4da154d78d3d3c0ee6dded35e8236b5ef991d95f2723eeac098fc2a6c15bea1f75e09c57886dce1f1a3b3a6bf0b66ae729c598d2c3e16ee3d6e7cb7b8497541ac9c4aa756c9ce06016204418600acd73f344d1c4d701c8e228a8ecf40841879e4a579c0c1f608f9cf6aa1bb6ed0461345339fd052edd35262e20d9b59cda71b2f7dbaf2a1a96f625cb2fb867c6d2a4d7ef69f31b6dc77dc5c903fedf9924eb216652bcb3cafe5cdaf044595071c0639787d97b1fa34de58852d155ad4de7f15e79f22b6c3ed4c206eb37cde310c93ced8be885b5ef28785301ff7", "751450ae7d126e11e2c5eb9ad78c589a6c633fb5afd076511960e035453fa1d4", "0344b229c5038ca2b0f63c7c5ac20e9961c3de84c3a0c65dd3ecfb74aef1399e84")]
        [InlineData(MessageType.TransferReply, "dd9ea7a051e07f62ec207510f12b708bc237ecf4afd08938fc6cca5613d992c3ae01906712dfc5e6278929a5c27320ea9ed3b7f51090bbeafff8264ef2bf23365b5bd7efd10e9396a30d9582608fa5dad0052c2c5e850eaaae7be5e1c2f906b4631bcb023da252da47382fd4c0b8fa161bacd791c5ebde64652fa9ccc4ef5fc77230d7914a9b76f773df4d8b6d31e439738c0968467970d567cbf0e126f45e96e4a806da36ad573260d5e45bb03320d982746357bbc383a8a9be257f54ec11c6f2fdb5db6ab422f2b8a95febd745587e05af6b1ba85e4931927e67da497adccf1d3fe163335812e4a5cee80830ec81da212f245a923d64892240c783cb3243d0a22dba7fb0645f8bb8c55dfbdf773c68b6cdf4da5db579e5e32d99d27920e09dd495877dfcb73c3a849d8053e024ca7f98b8bdcd552cf9e9381a5ac669e0c12959b43147ad5eda9c88271749a525052d0d60af2d24e98fee3415fa3f3c5c6f6363fc8948a2a151773d88d362fe38caf2bc80cbb224a1719f66a42d6d130750629ae536787c", "751450ae7d126e11e2c5eb9ad78c589a6c633fb5afd076511960e035453fa1d4", "028a4135364ff6c662bd7c81b60ed55eeeb91f8bb2b7faa13846cf2d32dbe0e8da")]
        [InlineData(MessageType.Termination, "694c3e01ede0af1cc0fd173f02a62e299f85b651c50aad97dbe3d907691c70c0184d0502775030382735a2eb7cd978101ccf561e3ae473d596fc3910a1c814928b5ee9620581db4bbe5fdf43e978c7eae13607471a13aae7d176d583eb43d160778ba9d48a1982259b61e6929ecb3443f96b4017c871a0e65356551557c045019894b0cad7041f84d55518d53b03fcef1c885041ab67187dc8f4f454686d9afb884d1b5534c4497303dd2c2723d345f297055fa4055761d420661f5a48790613b6f075d879bf0058a9d3f05d1b0d265f4011109b3897b73eefac318b07ab9b1e85ccc0851baed0fd11887b4f2691de888e2831ff56db2041cbd549329b90807aafc33b5b5846f7d0ebb88b20aeb4e4b06cdd23a922c6c0008da104335f6851163d7f7dc80b5fd285", "751450ae7d126e11e2c5eb9ad78c589a6c633fb5afd076511960e035453fa1d4", "0344b229c5038ca2b0f63c7c5ac20e9961c3de84c3a0c65dd3ecfb74aef1399e84")]
        [InlineData(MessageType.Abort, "566bfbbc938c40da60e6b509211c7ed6b27f1e115b18ea96688203252e98eb233cce59f48416e169013e21c623f45b5dcfc1ce87eea91418ab591b7fa6e9e36ed9781e4c306190927f3a3ee81d80e9121d6e297ffdd28f4b0b739cbd3bc218326cb2f4b0906ef89da3d056a5527f36e72e41c4229acaaa5d74ecd9d0c24a669e8003d4952d2d6b6f4a564c00c441c9cb24b727dbb8f22f3e38b8fcecf09a7579dd22e5b0f74f57c47397ec7242ed6ccac3a79d11edd8429a4279d4db74f6fbd6b5045e2d3e2a0c9f588978370dd67e2034e70290168cefbc1b0ab7a579041987c3d1ec74243c9c0caa871806da978cee0ec7ea89cce50df197b782a9d27da93a5733b8cc6d9d33718a7664041921718e74bd4156549f2adb2c2ad92efbc9d9128c035a66711471df52a0bc9cfeaf1fc6698894", "751450ae7d126e11e2c5eb9ad78c589a6c633fb5afd076511960e035453fa1d4", "028a4135364ff6c662bd7c81b60ed55eeeb91f8bb2b7faa13846cf2d32dbe0e8da")]
        public void MessageFormatterServiceTest(MessageType type, string payload, string aesKeyHex, string signingKey)
        {
            var signService = new MessageSignService(string.Empty);
            var formatterService = new MessageFormatterService(signService, string.Empty);
            var (messageContent, bodyString, sig) = formatterService.Deserialize(payload, aesKeyHex, signingKey);
            
            Assert.Equal(type, messageContent.Header.MessageType);
        }
    }
}
